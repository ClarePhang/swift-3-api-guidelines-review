
class NSResponder : NSObject, NSCoding {
  init?(coder coder: NSCoder)
  unowned(unsafe) var nextResponder: @sil_unmanaged NSResponder?
  func tryToPerform(_ anAction: Selector, with anObject: AnyObject?) -> Bool
  func performKeyEquivalent(_ theEvent: NSEvent) -> Bool
  func validRequestorForSendType(_ sendType: String, returnType returnType: String) -> AnyObject?
  func mouseDown(_ theEvent: NSEvent)
  func rightMouseDown(_ theEvent: NSEvent)
  func otherMouseDown(_ theEvent: NSEvent)
  func mouseUp(_ theEvent: NSEvent)
  func rightMouseUp(_ theEvent: NSEvent)
  func otherMouseUp(_ theEvent: NSEvent)
  func mouseMoved(_ theEvent: NSEvent)
  func mouseDragged(_ theEvent: NSEvent)
  func scrollWheel(_ theEvent: NSEvent)
  func rightMouseDragged(_ theEvent: NSEvent)
  func otherMouseDragged(_ theEvent: NSEvent)
  func mouseEntered(_ theEvent: NSEvent)
  func mouseExited(_ theEvent: NSEvent)
  func keyDown(_ theEvent: NSEvent)
  func keyUp(_ theEvent: NSEvent)
  func flagsChanged(_ theEvent: NSEvent)
  func tabletPoint(_ theEvent: NSEvent)
  func tabletProximity(_ theEvent: NSEvent)
  @available(OSX 10.5, *)
  func cursorUpdate(_ event: NSEvent)
  @available(OSX 10.5, *)
  func magnifyWithEvent(_ event: NSEvent)
  @available(OSX 10.5, *)
  func rotateWithEvent(_ event: NSEvent)
  @available(OSX 10.5, *)
  func swipeWithEvent(_ event: NSEvent)
  @available(OSX 10.5, *)
  func beginGestureWithEvent(_ event: NSEvent)
  @available(OSX 10.5, *)
  func endGestureWithEvent(_ event: NSEvent)
  @available(OSX 10.8, *)
  func smartMagnifyWithEvent(_ event: NSEvent)
  @available(OSX 10.6, *)
  func touchesBeganWithEvent(_ event: NSEvent)
  @available(OSX 10.6, *)
  func touchesMovedWithEvent(_ event: NSEvent)
  @available(OSX 10.6, *)
  func touchesEndedWithEvent(_ event: NSEvent)
  @available(OSX 10.6, *)
  func touchesCancelledWithEvent(_ event: NSEvent)
  @available(OSX 10.8, *)
  func quickLookWithEvent(_ event: NSEvent)
  @available(OSX 10.10.3, *)
  func pressureChangeWithEvent(_ event: NSEvent)
  func noResponderFor(_ eventSelector: Selector)
  var acceptsFirstResponder: Bool { get }
  func becomeFirstResponder() -> Bool
  func resignFirstResponder() -> Bool
  func interpretKeyEvents(_ eventArray: [NSEvent])
  func flushBufferedKeyEvents()
  var menu: NSMenu?
  func showContextHelp(_ sender: AnyObject?)
  func helpRequested(_ eventPtr: NSEvent)
  func shouldBeTreatedAsInkEvent(_ theEvent: NSEvent) -> Bool
  @available(OSX 10.7, *)
  func wantsScrollEventsForSwipeTrackingOnAxis(_ axis: NSEventGestureAxis) -> Bool
  @available(OSX 10.7, *)
  func wantsForwardedScrollEventsForAxis(_ axis: NSEventGestureAxis) -> Bool
  @available(OSX 10.7, *)
  func supplementalTargetForAction(_ action: Selector, sender sender: AnyObject?) -> AnyObject?
  func encodeWithCoder(_ aCoder: NSCoder)
}
extension NSResponder {
  func insertText(_ insertString: AnyObject)
  func doCommandBySelector(_ aSelector: Selector)
  func moveForward(_ sender: AnyObject?)
  func moveRight(_ sender: AnyObject?)
  func moveBackward(_ sender: AnyObject?)
  func moveLeft(_ sender: AnyObject?)
  func moveUp(_ sender: AnyObject?)
  func moveDown(_ sender: AnyObject?)
  func moveWordForward(_ sender: AnyObject?)
  func moveWordBackward(_ sender: AnyObject?)
  func moveToBeginningOfLine(_ sender: AnyObject?)
  func moveToEndOfLine(_ sender: AnyObject?)
  func moveToBeginningOfParagraph(_ sender: AnyObject?)
  func moveToEndOfParagraph(_ sender: AnyObject?)
  func moveToEndOfDocument(_ sender: AnyObject?)
  func moveToBeginningOfDocument(_ sender: AnyObject?)
  func pageDown(_ sender: AnyObject?)
  func pageUp(_ sender: AnyObject?)
  func centerSelectionInVisibleArea(_ sender: AnyObject?)
  func moveBackwardAndModifySelection(_ sender: AnyObject?)
  func moveForwardAndModifySelection(_ sender: AnyObject?)
  func moveWordForwardAndModifySelection(_ sender: AnyObject?)
  func moveWordBackwardAndModifySelection(_ sender: AnyObject?)
  func moveUpAndModifySelection(_ sender: AnyObject?)
  func moveDownAndModifySelection(_ sender: AnyObject?)
  func moveToBeginningOfLineAndModifySelection(_ sender: AnyObject?)
  func moveToEndOfLineAndModifySelection(_ sender: AnyObject?)
  func moveToBeginningOfParagraphAndModifySelection(_ sender: AnyObject?)
  func moveToEndOfParagraphAndModifySelection(_ sender: AnyObject?)
  func moveToEndOfDocumentAndModifySelection(_ sender: AnyObject?)
  func moveToBeginningOfDocumentAndModifySelection(_ sender: AnyObject?)
  func pageDownAndModifySelection(_ sender: AnyObject?)
  func pageUpAndModifySelection(_ sender: AnyObject?)
  func moveParagraphForwardAndModifySelection(_ sender: AnyObject?)
  func moveParagraphBackwardAndModifySelection(_ sender: AnyObject?)
  func moveWordRight(_ sender: AnyObject?)
  func moveWordLeft(_ sender: AnyObject?)
  func moveRightAndModifySelection(_ sender: AnyObject?)
  func moveLeftAndModifySelection(_ sender: AnyObject?)
  func moveWordRightAndModifySelection(_ sender: AnyObject?)
  func moveWordLeftAndModifySelection(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func moveToLeftEndOfLine(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func moveToRightEndOfLine(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func moveToLeftEndOfLineAndModifySelection(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func moveToRightEndOfLineAndModifySelection(_ sender: AnyObject?)
  func scrollPageUp(_ sender: AnyObject?)
  func scrollPageDown(_ sender: AnyObject?)
  func scrollLineUp(_ sender: AnyObject?)
  func scrollLineDown(_ sender: AnyObject?)
  func scrollToBeginningOfDocument(_ sender: AnyObject?)
  func scrollToEndOfDocument(_ sender: AnyObject?)
  func transpose(_ sender: AnyObject?)
  func transposeWords(_ sender: AnyObject?)
  func selectAll(_ sender: AnyObject?)
  func selectParagraph(_ sender: AnyObject?)
  func selectLine(_ sender: AnyObject?)
  func selectWord(_ sender: AnyObject?)
  func indent(_ sender: AnyObject?)
  func insertTab(_ sender: AnyObject?)
  func insertBacktab(_ sender: AnyObject?)
  func insertNewline(_ sender: AnyObject?)
  func insertParagraphSeparator(_ sender: AnyObject?)
  func insertNewlineIgnoringFieldEditor(_ sender: AnyObject?)
  func insertTabIgnoringFieldEditor(_ sender: AnyObject?)
  func insertLineBreak(_ sender: AnyObject?)
  func insertContainerBreak(_ sender: AnyObject?)
  @available(OSX 10.5, *)
  func insertSingleQuoteIgnoringSubstitution(_ sender: AnyObject?)
  @available(OSX 10.5, *)
  func insertDoubleQuoteIgnoringSubstitution(_ sender: AnyObject?)
  func changeCaseOfLetter(_ sender: AnyObject?)
  func uppercaseWord(_ sender: AnyObject?)
  func lowercaseWord(_ sender: AnyObject?)
  func capitalizeWord(_ sender: AnyObject?)
  func deleteForward(_ sender: AnyObject?)
  func deleteBackward(_ sender: AnyObject?)
  func deleteBackwardByDecomposingPreviousCharacter(_ sender: AnyObject?)
  func deleteWordForward(_ sender: AnyObject?)
  func deleteWordBackward(_ sender: AnyObject?)
  func deleteToBeginningOfLine(_ sender: AnyObject?)
  func deleteToEndOfLine(_ sender: AnyObject?)
  func deleteToBeginningOfParagraph(_ sender: AnyObject?)
  func deleteToEndOfParagraph(_ sender: AnyObject?)
  func yank(_ sender: AnyObject?)
  func complete(_ sender: AnyObject?)
  func setMark(_ sender: AnyObject?)
  func deleteToMark(_ sender: AnyObject?)
  func selectToMark(_ sender: AnyObject?)
  func swapWithMark(_ sender: AnyObject?)
  func cancelOperation(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeBaseWritingDirectionNatural(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeBaseWritingDirectionLeftToRight(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeBaseWritingDirectionRightToLeft(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeTextWritingDirectionNatural(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeTextWritingDirectionLeftToRight(_ sender: AnyObject?)
  @available(OSX 10.6, *)
  func makeTextWritingDirectionRightToLeft(_ sender: AnyObject?)
  @available(OSX 10.8, *)
  func quickLookPreviewItems(_ sender: AnyObject?)
}
extension NSResponder {
  var undoManager: NSUndoManager? { get }
}
extension NSResponder {
  @available(OSX 10.7, *)
  func validateProposedFirstResponder(_ responder: NSResponder, forEvent event: NSEvent?) -> Bool
}
extension NSResponder {
  func presentError(_ error: NSError, modalForWindow window: NSWindow, delegate delegate: AnyObject?, didPresentSelector didPresentSelector: Selector, contextInfo contextInfo: UnsafeMutablePointer<Void>)
  func presentError(_ error: NSError) -> Bool
  func willPresentError(_ error: NSError) -> NSError
}
extension NSResponder {
  @available(OSX 10.7, *)
  func performTextFinderAction(_ sender: AnyObject?)
}
extension NSResponder {
}
