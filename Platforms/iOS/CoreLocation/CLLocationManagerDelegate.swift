
protocol CLLocationManagerDelegate : NSObjectProtocol {
  @available(iOS 6.0, *)
  optional func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation])
  @available(iOS 3.0, *)
  optional func locationManager(_ manager: CLLocationManager, didUpdateHeading newHeading: CLHeading)
  @available(iOS 3.0, *)
  optional func locationManagerShouldDisplayHeadingCalibration(_ manager: CLLocationManager) -> Bool
  @available(iOS 7.0, *)
  optional func locationManager(_ manager: CLLocationManager, didDetermineState state: CLRegionState, forRegion region: CLRegion)
  @available(iOS 7.0, *)
  optional func locationManager(_ manager: CLLocationManager, didRangeBeacons beacons: [CLBeacon], inRegion region: CLBeaconRegion)
  @available(iOS 7.0, *)
  optional func locationManager(_ manager: CLLocationManager, rangingBeaconsDidFailForRegion region: CLBeaconRegion, withError error: NSError)
  @available(iOS 4.0, *)
  optional func locationManager(_ manager: CLLocationManager, didEnterRegion region: CLRegion)
  @available(iOS 4.0, *)
  optional func locationManager(_ manager: CLLocationManager, didExitRegion region: CLRegion)
  @available(iOS 2.0, *)
  optional func locationManager(_ manager: CLLocationManager, didFailWithError error: NSError)
  @available(iOS 4.0, *)
  optional func locationManager(_ manager: CLLocationManager, monitoringDidFailForRegion region: CLRegion?, withError error: NSError)
  @available(iOS 4.2, *)
  optional func locationManager(_ manager: CLLocationManager, didChangeAuthorizationStatus status: CLAuthorizationStatus)
  @available(iOS 5.0, *)
  optional func locationManager(_ manager: CLLocationManager, didStartMonitoringForRegion region: CLRegion)
  @available(iOS 6.0, *)
  optional func locationManagerDidPauseLocationUpdates(_ manager: CLLocationManager)
  @available(iOS 6.0, *)
  optional func locationManagerDidResumeLocationUpdates(_ manager: CLLocationManager)
  @available(iOS 6.0, *)
  optional func locationManager(_ manager: CLLocationManager, didFinishDeferredUpdatesWithError error: NSError?)
  @available(iOS 8.0, *)
  optional func locationManager(_ manager: CLLocationManager, didVisit visit: CLVisit)
}
